<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lym.demo.mapper.EmpMapper">
    <resultMap id="BaseResultMap" type="com.lym.demo.domain.Emp">
        <id column="empno" jdbcType="INTEGER" property="empno"/>
        <result column="num" jdbcType="INTEGER" property="id"/>
        <result column="ename" jdbcType="VARCHAR" property="ename"/>
        <result column="salary" jdbcType="DOUBLE" property="salary"/>
        <result column="bonus" jdbcType="DOUBLE" property="bonus"/>
        <result column="hiredate" jdbcType="DATE" property="hiredate"/>
        <result column="deptno" jdbcType="INTEGER" property="deptno"/>
    </resultMap>
    <sql id="Base_Column_List">
    empno, ename, salary, bonus, hiredate, deptno
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from emp
        where empno = #{empno,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        @rownum:=@rownum+1 as num,
        <include refid="Base_Column_List"/>
        from
        (SELECT @rownum:=0)r,
        emp
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from emp
    where empno = #{empno,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="empno" keyProperty="empno" parameterType="com.lym.demo.domain.Emp"
            useGeneratedKeys="true">
    insert into emp (ename, salary, bonus, 
      hiredate, deptno)
    values (#{ename,jdbcType=VARCHAR}, #{salary,jdbcType=DOUBLE}, #{bonus,jdbcType=DOUBLE}, 
      #{hiredate,jdbcType=DATE}, #{deptno,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" keyColumn="empno" keyProperty="empno" parameterType="com.lym.demo.domain.Emp"
            useGeneratedKeys="true">
        insert into emp
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ename != null">
                ename,
            </if>
            <if test="salary != null">
                salary,
            </if>
            <if test="bonus != null">
                bonus,
            </if>
            <if test="hiredate != null">
                hiredate,
            </if>
            <if test="deptno != null">
                deptno,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ename != null">
                #{ename,jdbcType=VARCHAR},
            </if>
            <if test="salary != null">
                #{salary,jdbcType=DOUBLE},
            </if>
            <if test="bonus != null">
                #{bonus,jdbcType=DOUBLE},
            </if>
            <if test="hiredate != null">
                #{hiredate,jdbcType=DATE},
            </if>
            <if test="deptno != null">
                #{deptno,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lym.demo.domain.Emp">
        update emp
        <set>
            <if test="ename != null">
                ename = #{ename,jdbcType=VARCHAR},
            </if>
            <if test="salary != null">
                salary = #{salary,jdbcType=DOUBLE},
            </if>
            <if test="bonus != null">
                bonus = #{bonus,jdbcType=DOUBLE},
            </if>
            <if test="hiredate != null">
                hiredate = #{hiredate,jdbcType=DATE},
            </if>
            <if test="deptno != null">
                deptno = #{deptno,jdbcType=INTEGER},
            </if>
        </set>
        where empno = #{empno,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lym.demo.domain.Emp">
    update emp
    set ename = #{ename,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DOUBLE},
      bonus = #{bonus,jdbcType=DOUBLE},
      hiredate = #{hiredate,jdbcType=DATE},
      deptno = #{deptno,jdbcType=INTEGER}
    where empno = #{empno,jdbcType=INTEGER}
  </update>
</mapper>